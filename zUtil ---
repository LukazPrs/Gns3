Instalação Lamp 18.04

# apt install tasksel
# tasksel install lamp-server

Criar public_html para acesso ao usuario aluno e redirecionar apache2

# mkdir $HOME/public_html
# mv /var/www/html/index.html public_html/

# sudo nano /etc/apache2/apache2.conf
- substitua <Directory /var/www> pelo dir

sudo nano /etc/apache2/sites-available/000-default.conf

Procure pela linha que tenha DocumentRoot
Onde tem /var/www coloque o mesmo diretório que você colocou no arquivo apache2.conf.

resiniciar apache2
_________________________________________________________________________________________________

CONFIGURAÇÃO MYSQL
CREATE USER 'aluno'@'localhost' IDENTIFIED BY '123';      criar usuario
GRANT ALL PRIVILEGES ON *.* TO 'aluno'@'localhost';       dar privilegios
Acessar com senha '123': mysql -u aluno -p
_________________________________________________________________________________________________

CONFIGURAR POSTGRESQL & PGADMIN
echo "postgres:123" | chpasswd
su postgres -c "psql -c \"alter user postgres with password '123';\""
__________________________________________________________________________________________________
--------------------------
apt install gdm3  -> interface login ubuntu.
--------------------------

dependencias scratch2: apt-get install -y libgtk2.0-0:i386 \
                   libstdc++6:i386 \
                   libxml2:i386 \
                   libxslt1.1:i386 \
                   libcanberra-gtk-module:i386 \
                   gtk2-engines-murrine:i386 \
                   libqt4-qt3support:i386 \
                   libgnome-keyring0:i386 \
                   libnss-mdns:i386 \
                   libnss3:i386
                   
 __________________________________________________________________________________________________
 ---- ANSIBLE
 
ansible all -m command -a "shutdown now"

ansible-playbook sources.yml
____________________________________________________________________________________________________

~~~~~~~~~~~  formatar pendrive
umount
umount /dev/sdb1
mkfs.vfat /dev/sdb

~~~~~ ~~~~~~ montar pendrive
lsblk
umount /dev/sdb1
dd if=Ulinux3Full.iso of=/dev/sdb status=progress

EDITAR PLYMOUTH
/ush/share/plymouth/ubuntu-logo ...
 ____________________________________________________________________________________________________
 
 install virtualbox: cent os dependencias - [ https://forums.virtualbox.org/viewtopic.php?f=3&t=88614 ]
 
 sudo dnf install elfutils-libelf-devel
 sudo /sbin/vboxconfig
 
 
  ____________________________________________________________________________________________________
  ___________________________________________________________________________________________________

STARTING ANSIBLE
[linha de comando ad-hoc]
-i = inventario
-u = usurario
-k = pedir senha
-K = solicita elevação de privilegio
-b = executar a elevação de privilegio
-v = verbose
-m = modulo
-a = argumento

ansible all -u user -m ping  \  ansible 10.0.0.11 -u user -m ping

ansible all -u user -m setup
ansible all -u user -b -m systemd -a "name=ssh state=restarted"
ansible all -u user -k -b -m shell -a "systemctl status ssh"

---------------- HOSTS EXAMPLE ----------------
[curso_2]
10.0.0.35

## passando confs para um host
#mysql ansible_ssh_host=10.0.0.35
#mysql ansible_ssh_host=10.0.0.35 ansible_ssh_user=root ansible_ssh_pass=compute ansible_become_method=sudo ansible_become_user=compute ansible_pass=compute ansib>

[curso_1]
www ansible_ssh_host=10.0.0.51

## usando grupos
[curso:children]
curso_2
curso_1

## determinar variaveis para um grupo
[curso_1:vars]
ansible_ssh_port=22
ansible_ssh_user=compute
ansible_ssh_pass=compute
ansible_become=yes
ansible_become_method=sudo
ansible_become_user=compute
ansible_become_pass=compute

-------------------------------------------------------

------------ ROLES
tasks - lista de tarefas a serem executadas em uma role
handlers - são manipuladores/eventos acionados por uma task
files - arquivos utilizados para deploy dentro de uma role
templates - modelos de deploy dentro de uma role(permite variaveis)
vars - variaveis adicionais de uma role
defaults - variaveis padrão de uma role. prioridade ,maxima
meta - trata dependencias de uma role por outra role(primeiro diretorio a ser analizado)

OBS: dentro dos diretorios tasks, handlers, vars, defaults e meta, deverá existir um arquivo com o nome de main.yml para que o msm seja interpretado.

------------------------------------------------------------------------
diretorios host_vars group_vars(devem ser criados no dir raiz):
# vim host_vars/www  [arquivo com mesmo nome do host dentro do inventario *hosts*]

nivel de prioridade:
1. defaults/main.yml 
2. host_vars/www
3. inventory (variaveis de hosts)
4. group_vars/servidores
5. inventory (variaveis de grupos)

------------------------------------------------------------------------

criar estrutura de dir para roles: dir:roles
# ansinle-galaxy init create_user
